# -*- coding: utf-8 -*-
"""darknet_yolov4_final_contest.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1K7DPs6PoRX0CiTOLHOJDpgylHxw9Zu92
"""

from google.colab import drive
drive.mount('/content/drive')

import torch

print("Torch version:{}".format(torch.__version__))
print("cuda version: {}".format(torch.version.cuda))
print("cudnn version:{}".format(torch.backends.cudnn.version()))

#git 에서 darknet 다운로드
!git clone https://github.com/AlexeyAB/darknet.git

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/darknet/
!sed -i 's/OPENCV=0/OPENCV=1/' Makefile
!sed -i 's/GPU=0/GPU=1/' Makefile
!sed -i 's/CUDNN=0/CUDNN=1/' Makefile
!sed -i 's/CUDNN_HALF=0/CUDNN_HALF=1/' Makefile

!make

# Commented out IPython magic to ensure Python compatibility.
##내 로컬 파일*(폴더)로 복사 명령어
# %cp ./darknet /content/drive/My\ Drive/Colab\ Notebooks/darknet/bin/darknet

!wget https://github.com/AlexeyAB/darknet/releases/download/darknet_yolo_v3_optimal/yolo4.conv.137

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/My\ Drive/Colab\ Notebooks/darknet/bin/darknet/dynamic

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/My\ Drive/Colab\ Notebooks/darknet/bin/darknet/dynamic
!unzip /content/drive/My\ Drive/Colab\ Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료.zip

"""**이거는 좋은 코드야 json 파일 여러개를 feature라는 key로 합쳐주는, 근데 이번 공모전에서는 안씀ㅋ**"""

import json     #오케이 그냥 파일 하나씩 읽어오면서 땡기기
#data = str(input.read()).encode("string-escape").replace('/', '\')
all_json = None
for file in files :
    json_data = json.load(open(path + file))
    if all_json == None : all_json = json_data
    else : all_json['features'].extend(json_data['features'])

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/My\ Drive/Colab\ Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료/
!rm *.json

import os
import json  
from PIL import Image
#==============================================================================
def convert(size, box): 
  dw = 1./size[0] 
  dh = 1./size[1] 
  x = (box[0] + box[1])/2.0 
  y = (box[2] + box[3])/2.0 
  w = box[1] - box[0] 
  h = box[3] - box[2] 
  x =x*dw 
  w =w*dw 
  y =y*dh 
  h =h*dh
  return (x,y,w,h) 
#==============================================================================
path = '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료/'
files = os.listdir(path)
#data = str(input.read()).encode("string-escape").replace('/', '\')
dic={
    '일반차량' : 0,
    '목적차량(특장차)' : 0,
    '이륜차' : 1,
    '보행자' : 2
}
image_id='ab'
all=[];point=list()
count = 0;class_id=0;x=0;y=0;width=0;height=0       #count will be 1200
#==============================================================================
for file in files :
  if not 'json' in file:
    continue
  with open(path+file,'r') as input:     
    data=input.read()
  json_data = json.loads(data,strict=False)
  image_id=json_data['filename']
  height=json_data['metadata']['height']
  width=json_data['metadata']['width']
  #=============================================================================
  for properties in json_data['annotations']:          #annotation의 value들이 순차적으로 돌아감 (중괄호 3개)
      class_id=dic[properties['label']]                #중괄호 하나 안에 5개의 key들이 있는데 
      point=properties['points'].copy()        #2차원 list
      xmin=10000;xmax=0;ymin=10000;ymax=0
      for x in point:
        if (xmin > x[0]): xmin = x[0]
        if xmax < x[0]: xmax = x[0]
      for y in point:
        if (ymin > y[1]): ymin = y[1]
        if ymax < y[1]: ymax = y[1]
      b = (xmin, xmax, ymin, ymax)
      bb = convert((width,height), b)
      line=[]
      line.append(class_id);line.append(bb[0]);line.append(bb[1]);line.append(bb[2]);line.append(bb[3])
      all.append(line)
  for i in image_id:
        if i == '.':
          image_id=image_id.split('.')[0]
          break
  f = open("/content/drive/MyDrive/tensorflow-yolov4-tflite/dataset/시발/"+image_id+".txt", 'w')
  for i in range(len(all)):
    f.write(' '.join(map(str,all[i])))
    f.write('\n')
  f.close()
  all.clear()
  count+=1
print(count)

"""**txt파일 압축하기**

파일안의 전체 내용을 옮기고 싶으면, 파일을 압축해서

원하는 파일 안에다가 풀어버리면 되지~
"""

#%cd '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic'
#!tar czf 'file_txt'.tgz 'file_txt'
!tar czf '01.학습데이터자료'.tgz '01.학습데이터자료'

# Commented out IPython magic to ensure Python compatibility.
#명령어 참고 사이트
#01.학습데이터자료 파일의 json파일 싹다 지우기
# %cd '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료'
!pwd
# %rm *.json

# Commented out IPython magic to ensure Python compatibility.
#directory1의 모든 txt 컨텐트를 directory2로 복사하기 (recursively)
# %cd '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/file_txt'
!cp -r *.txt '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료/'

# Commented out IPython magic to ensure Python compatibility.
#아예 파일 전체를 복사 명령 내리기
# %cd '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/file_txt'
!cp -r *.txt '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료/'

"""**txt:9964개, png파일:10329개**

차이나는 이유: png 파일에 해당하는 json파일에 객체가, bounding box가 없던것이 365개가 있었음!!!!!

**지우기**
"""

import os
path = '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료/'
files = os.listdir(path)
count=0
name=[]
name_txt=[]
what=[]
for file in files :
  if 'txt' in file:
    continue
  a=str(file)
  b=a.split('.')
  name.append(b[0])
name.sort()
print(len(name))
for file in files :
  if 'png' in file:
    continue
  a=str(file)
  b=a.split('.')
  name_txt.append(b[0])
name_txt.sort()
print(len(name_txt))
for i in range(10329):
  count1=0                #flag가 중요
  for j in range(9964):
    if name[i] == name_txt[j]:
      count1+=1
      break
  if count1==0:
    what.append(name[i])

print(len(what))
what

#word_cnt=dict()
#for word in name: 
#    if word not in word_cnt.keys(): 
#        word_cnt[word] = 1 
#    else: 
#        word_cnt[word] += 1
#word_cnt
#for i in range(10329):
#  count+=word_cnt[name[i]]
#count
  #png파일일때 이름이 중복되면 중복 리스트에 담는다.===> 중복이 아니였음...

#what 배열을 사용하기.
path = '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료/'
files = os.listdir(path)
for file in files :
  if 'png' in file:
    for a in what:
      if str(file) == (a+'.png'):
        path2 = path+a+'.png'
        os.remove(path2)

#train_.txt파일 만들기
#총 10329개의 사진
#총 10329개의 json파일
path = '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료/'
files = os.listdir(path)
f = open("/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/train_.txt", 'w')
count=0
for file in files :
  if 'png' in file:
    st='dynamic/01.학습데이터자료/'+str(file)
    f.write(st)
    f.write('\n')
    count+=1
f.close()
print(count)

path = '/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/dynamic/01.학습데이터자료/'
files = os.listdir(path)
dic={
    1.0 : 0,
    2.0 : 1,
    3.0 : 2
}
all=[]
count=0
#==============================================================================
for file in files :
  if not 'txt' in file:
    continue
  with open(path+file,'r') as input:        #with 블럭이 끝나면 자동으로 닫아줌
    data=input.readline()
    while data:
      data=list(map(float,data.split()))
      line=[]
      line.append(dic[data[0]]);line.append(data[1]);line.append(data[2]);line.append(data[3]);line.append(data[4])
      all.append(line)
      data = input.readline()
      if len(data)<=1:break
  f=open(path+file,'w')
  for i in range(len(all)):
    f.write(' '.join(map(str,all[i])))
    f.write('\n')
  f.close()
  for i in range(len(all)):
    print(all[i])
  all.clear()
  count+=1
print(count)
  #=============================================================================

"""# **학습가자**"""

# Commented out IPython magic to ensure Python compatibility.
#darknet 권한 변경 및 실행 테스트
# %cd /content/drive/My\ Drive/Colab\ Notebooks/darknet/bin/darknet
!chmod +x ./darknet
!./darknet detector

"""**첫 학습 명령어**"""

#!./darknet detector train sia/sia.DATA sia/sia.cfg sia/sia.137 -map -dont_show

"""**이후에 계속 학습 이어갈 명령어**"""

!./darknet detector train sia/sia.DATA sia/sia.cfg backup_05/sia_last.weights -map -dont_show

"""**특장차 다 바꿔버리게**"""

json_data

with open('./labels.json', 'w') as outfile:
    json.dump(all_json, outfile, indent='\t')

!ls

import json # import json module
with open('/content/drive/MyDrive/10th/simplified_rbox_cnn/Arirang_Dataset/train/labels.json') as json_file:
    json_data = json.load(json_file)



from PIL import Image
def convert(size, box): 
  dw = 1./size[0] 
  dh = 1./size[1] 
  x = (box[0] + box[1])/2.0 
  y = (box[2] + box[3])/2.0 
  w = box[1] - box[0] 
  h = box[3] - box[2] 
  x = x*dw 
  w = w*dw 
  y = y*dh 
  h = h*dh 
  return (x,y,w,h) 

im=Image.open(img_path) 
w= int(im.size[0]) 
h= int(im.size[1]) 
print(xmin, xmax, ymin, ymax) #define your x,y coordinates 
b = (xmin, xmax, ymin, ymax) 
bb = convert((w,h), b)

from PIL import Image
def convert(size, box): 
  dw = 1./size[0] 
  dh = 1./size[1] 
  x = (box[0] + box[1])/2.0 
  y = (box[2] + box[3])/2.0 
  w = box[1] - box[0] 
  h = box[3] - box[2] 
  x =x*dw 
  w =w*dw 
  y =y*dh 
  h =h*dh
  return (x,y,w,h) 

def doit(all,count,features,image_id):
            xmin=10000;xmax=0;ymin=10000;ymax=0
            image_id=features['properties']['image_id']
            count=count+1
            cost=[];cost2=[]
            cost=features['properties']['object_imcoords']
            for a in cost.split(','):
              cost2.append(float (a))
            im=Image.open(("/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/sia_pic/3/"+image_id)) 
            w= int(im.size[0]) 
            h= int(im.size[1])
            for i in range(0,8,2):
              if (xmin > cost2[i]): xmin = cost2[i]
              if xmax < cost2[i]: xmax = cost2[i]
            for i in range(1,8,2):
              if (ymin > cost2[i]): ymin = cost2[i]
              if ymax < cost2[i]: ymax = cost2[i]
            b = (xmin, xmax, ymin, ymax)
            bb = convert((w,h), b)
            class_id=features['properties']['type_id']
            line=[]
            line.append(class_id);line.append(bb[0]);line.append(bb[1]);line.append(bb[2]);line.append(bb[3])
            all.append(line)
            return count,all,image_id

count = 0;class_id=0;x=0;y=0;width=0;height=0       #count will be 1200
image_id='ab'
all=[]                                        #딕셔너리의 포인트: {}를 받아서 대표로 사용한다~~~~!
for features in json_data["features"]:        #이거 코드 그대로 해석하면, json_data의 key중에 feature와 type이 있는데, 그중에서 feature key의 value들을 한바퀴씩 돌리는데~
  for properties in features["properties"]:   #그때 이 value들이 list로 구성되어 있으니, 이때 각 요소들은 {}한개씩으로 구성되어있고, 이때  feature key의 value중 properties로 들어가는데~
                                              #첫번째 for문 시작과 두번쨰 for문 마지막의 feature는 각 {}들을 지칭하는거
      #if count == 100: break
      if properties == 'image_id':
        if len(image_id)>4:
          if image_id != features['properties']['image_id']:
            for i in image_id:
              if i == '.':
                image_id=image_id.split('.')[0]
                break
            f = open("/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/sia_pic/tx/"+image_id+".txt", 'w')
            for i in range(len(all)):
              if all[i][0] != '16':
                f.write(' '.join(map(str,all[i])))
                f.write('\n')
            f.close()
            for i in range(len(all)):
              print(all[i])
            all.clear()
            count,all,image_id = doit(all,count,features,image_id)
            print('====================================')

          else:
            count,all,image_id = doit(all,count,features,image_id)

        else:
          count,all,image_id = doit(all,count,features,image_id)
  #if count == 100: break
for i in image_id:
  if i == '.':
    image_id=image_id.split('.')[0]
    break
f = open("/content/drive/MyDrive/Colab Notebooks/darknet/bin/darknet/sia_pic/tx/"+image_id+".txt", 'w')
for i in range(len(all)):
  if all[i][0] != '16':
    f.write(' '.join(map(str,all[i])))
    f.write('\n')
f.close()

# Commented out IPython magic to ensure Python compatibility.
# %cd /content/drive/My\ Drive/Colab\ Notebooks/darknet/bin/darknet/sia_pic
!unzip /content/drive/My\ Drive/Colab\ Notebooks/darknet/bin/darknet/sia_pic/3.zip

"""# **학습 가보자**"""

# Commented out IPython magic to ensure Python compatibility.
#darknet 권한 변경 및 실행 테스트
# %cd /content/drive/My\ Drive/Colab\ Notebooks/darknet/bin/darknet
!chmod +x ./darknet
!./darknet detector

"""**최초학습**"""

!./darknet detector train sia/sia.DATA sia/sia.cfg sia/sia.137 -dont_show

"""**추가학습위해서는 이전의 가중치를 이용해야지**

아래 두개 사이트는 data set 8:2로 나누는거랑, data set 정확도 그래프 보는 법 참고할 수 있는 사이트

https://blog.roboflow.com/mean-average-precision/

https://blog.roboflow.com/train-test-split/
"""

!./darknet detector train sia/sia.DATA sia/sia.cfg backup_05/sia_last.weights -dont_show
#중간에 끊고 내일 다시할라면 sia/sia.137자리를 backup_05/sia_2000.weights 같은거 넣으면 됨

"""# **나머지 자세한 명령어는 역시 github 참고!!**

https://github.com/AlexeyAB/darknet#how-to-train-to-detect-your-custom-objects
"""

# Commented out IPython magic to ensure Python compatibility.
def imShow(path):
  import cv2
  import matplotlib.pyplot as plt
#   %matplotlib inline

  image = cv2.imread(path)
  height, width = image.shape[:2]
  resized_image = cv2.resize(image,(3*width, 3*height), interpolation = cv2.INTER_CUBIC)

  fig = plt.gcf()
  fig.set_size_inches(18, 10)
  plt.axis("off")
  plt.imshow(cv2.cvtColor(resized_image, cv2.COLOR_BGR2RGB))
  plt.show()

!./darknet detector test sia/sia.DATA sia/sia.cfg backup_05/sia_last.weights test/OBJ04450_PS3_K3A_NIA0292.png
imShow('predictions.jpg')

def min_max_normalize(size,lst):
    min=10000
    max=0
    for i in range(len(lst)):
      for j in range(1,len(lst[i])):
        if min > float (lst[i][j]):
          min=float (lst[i][j])
        if max < float (lst[i][j]):
          max=float (lst[i][j])
    
    normalized_2vector = []
    for i in range(len(lst)):
      normalized = []
      for j in range(len(lst[i])):
        if j==0:
          normalized_num=int (lst[i][0])
        else:
          normalized_num = (float (lst[i][j]) - min) / (max - min)     #2차원 min을 인식 못하네, 1차원만 인식 가능하구나
          if normalized_num==1.0:
            normalized_num=0.9999888888888888
          elif normalized_num==0.0:
            normalized_num=0.0011111333222222
        normalized.append(str (normalized_num))
      normalized_2vector.append(normalized)
    return normalized_2vector

def boo(a,b):
  if a<0:
    a=(-a)
  if b<0:
    b=(-b)
  return a,b


#count = 0
image_id='abc'
image_id2='abc'
class_id=0
x=0
y=0
width=0
height=0
all=[]
for features in json_data["features"]:
  for properties in features["properties"]:
      if count == 1: break

      if properties == 'object_imcoords':
        cost=[];cost2=[]
        cost=features['properties']['object_imcoords']
        for a in cost.split(','):
          cost2.append(float (a))
        x=(cost2[0]+ cost2[2]+cost2[4]+cost2[6]) / 4
        y=(cost2[1]+ cost2[3]+cost2[5]+cost2[7]) / 4
        width =cost2[2]-cost2[0];height=cost2[3]-cost2[1]
        width,height = boo(width,height)
      
      if properties == 'type_id':
        class_id=features['properties']['type_id']
        line=[]
        line.append(class_id);line.append(x);line.append(y);line.append(width);line.append(height)
        all.append(line)


      if properties == 'image_id':
        if len(image_id)>4:
          if image_id != features['properties']['image_id']:
            all=min_max_normalize(all).copy()
            f = open("/content/drive/MyDrive/10th/simplified_rbox_cnn/Arirang_Dataset/"+image_id+".txt", 'w')
            for i in range(len(all)):
              f.write(' '.join(all[i]))
              f.write('\n')
            f.close()
            image_id=features['properties']['image_id']
            count=count+1
            for i in range(len(all)):
              print(all[i])
            all.clear()

        else:
          image_id=features['properties']['image_id']
      print('====================================')

image_id='abc'
f = open("/content/drive/MyDrive/10th/simplified_rbox_cnn/Arirang_Dataset/train/4/train_.txt", 'w')
for features in json_data["features"]:
  for properties in features["properties"]:
      if properties == 'image_id':
        image_id=features['properties']['image_id']
        f.write('sia_pic/3/'+image_id+'\n')
      print('====================================')
f.close()

"""**png 파일을 jpg 파일로 변환===> 나는 필요 없네**


"""

import os

import glob
from PIL import Image


!apt-get install tree


#!rm -r images_jpg
#!rm -r images
#!rm -r sample_data

def convert_png_to_jpg(path):
    # jpg파일을 저장하기 위한 디렉토리의 생성
    if not os.path.exists(path+'_jpg'):
        os.mkdir(path+'_jpg') 

    # 모든 png 파일의 절대경로를 저장
    all_image_files=glob.glob(path+'/*.png') 

    for file_path in all_image_files:                   # 모든 png파일 경로에 대하여
        img = Image.open(file_path).convert('RGB')  # 이미지를 불러온다.

        directories=file_path.split('/')                # 절대경로상의 모든 디렉토리를 얻어낸다.
        directories[-2]+='_jpg'                     # 저장될 디렉토리의 이름 지정
        directories[-1]=directories[-1][:-4]+'.jpg'  # 저장될 파일의 이름 지정
        save_filepath='/'.join(directories)          # 절대경로명으로 바꾸기
        img.save(save_filepath, quality=100)       # jpg파일로 저장한다.

path='/content/images'
convert_png_to_jpg(path)